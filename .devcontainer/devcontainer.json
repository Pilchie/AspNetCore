{
  "name": "ASP.NET Core repo build",

  // "build": {
  //     "dockerfile": "Dockerfile",
  //     "args": {
  //         // Update 'VARIANT' to pick a .NET Core version: 2.1, 3.1
  //         "VARIANT": "3.1",
  //         // Options
  //         "INSTALL_NODE": "true",
  //         "NODE_VERSION": "lts/*",
  //         "INSTALL_AZURE_CLI": "false"
  //     }
  // },

  "image": "mcr.microsoft.com/vscode/devcontainers/dotnetcore:5.0",

  // Set *default* container specific settings.json values on container create.
  "settings": {
      "terminal.integrated.shell.linux": "/bin/bash"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
      "ms-dotnettools.csharp"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [5000, 5001],
  // [Optional] To reuse of your local HTTPS dev cert, first export it locally using this command:
  //  * Windows PowerShell:
  //     dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //  * macOS/Linux terminal:
  //     dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //
  // Next, after running the command above, uncomment lines in the 'mounts' and 'remoteEnv' lines below,
  // and open / rebuild the container so the settings take effect.
  //
  "mounts": [
      // "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind"
  ],

  "containerEnv": {
      // TODO: use ${containerWorkspaceFolder} when it works in codespaces
      //"DOTNET_ROOT": "/workspaces/aspnetcore/.dotnet",
      "DOTNET_ROOT": "/root/workspace/aspnetcore/.dotnet",
      "DOTNET_MULTILEVEL_LOOKUP": "0"
  },

  "remoteEnv": {
      // "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
      // "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",

      // TODO: use ${containerWorkspaceFolder} when it works in codespaces
      //"PATH": "/workspaces/aspnetcore/.dotnet:${containerEnv:PATH}"
      "PATH": "/root/workspace/aspnetcore/.dotnet:${containerEnv:PATH}"
  },

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "git submodule init; git submodule update --recursive; ./restore.sh"

  // Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
  // "remoteUser": "vscode"
}
